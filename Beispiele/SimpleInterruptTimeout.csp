-- SimpleInterruptTimeout

-- Note: FDR and ProB statespace different due to non-omega semantics of FDR

channel gen:{0..99}
channel stop:{0..99}

MAIN = GEN(0) /\ (GEN(10) [> GEN(20))

GEN(x) = (x<99 & gen!x -> GEN(x+1)) [] stop!x -> SKIP

-- Trace Check Generated by ProB:
PROB_TEST_TRACE = gen.0 -> gen.1 -> gen.2 -> STOP [> gen.20 -> gen.21 -> stop.22 -> STOP

assert MAIN [T= PROB_TEST_TRACE

Tst = (stop!0 -> SKIP /\ gen!0 -> SKIP) 
-- FDR thinks that stop!0,tick,gen!0 is a valid sequence; ProB and ProBE do not

Tst2 = (stop!0 -> (SKIP [] gen!0->SKIP)) [] gen!0 -> SKIP
-- assert Tst [FD= Tst2 -- fails with fdr


S(x) = (x < 10 & gen!x -> S(x+1))
TestInterrupt1 = S(0) /\ S(5) -- a basic test which does not touch the tick problem

TestTimeout1 = S(0) [> S(5)
TestTimeout2 = GEN(0) [> GEN(20)