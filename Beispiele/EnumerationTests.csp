-- EnumerationTests

datatype FRUIT = apple | orange | banana | pear

channel out:{0..3}.{2..4}.{2..7}.FRUIT



MAIN = Test1;Test2;Test3; TestHide2; TestMultiSync2
-- Note: ProB can find an error when model checking (output out of range)
--MAIN = TestHide2
--MAIN = Test3

Test1 = out!1!3!5!orange -> SKIP

channel in,mid:{0..3}.{2..5}
Test2 = in?t:{0..1}!4 -> SKIP
-- Test2 = in?t:t<2!4 -> SKIP

Test3 = out?x?z!x+z?f {- comm1 -} -> {- comm2 -} out.z?y?v!banana -> out?all -> out?r:{x|x<-{0..99},(x<2),(x>0)}?rest -> SKIP
-- Test3 = out?x?z!x+z?f -> out.z?y?v!banana -> out?all -> out?r:(r<2 and r>0)?rest -> SKIP
-- MAIN = out?x?z!x+z?f -> out.z?y?v.banana -> SKIP -- Parser gives error



TestHide1 = (in!1!2 -> SKIP) \ {| in |}
TestHide2 = (in?x?z -> in!x!z -> SKIP |~| in!3!5 -> SKIP) \ {| in |}

TestRename1 = (in?x?z -> in!x!z -> SKIP |~| in!3!5 -> SKIP) [[ in <- mid ]]
-- TestRename2 = (in?x?z -> in!x!z -> SKIP |~| in!3!5 -> SKIP) [[ in.nr <- mid.0 ]]  -- We now get error msg for nr !


R1 = in?x?z -> mid!x!z -> STOP
R2 = in?x2?z2 -> mid!x2!z2 -> SKIP 

TestMultiSync = R1 [| {| in |} |] R2
                
TestMultiSync2 = (TestMultiSync [| {| in |} |] in!2!4 -> SKIP )

-- Trace Check Generated by ProB:
-- FDR says: The extensions operation is not defined for value out.4
-- but with ProBe one can reproduce the sequence; so it is a bug in FDR??
PROB_TEST_TRACE = out.1.3.5.orange -> in.1.4 -> out.1.2.3.apple -> out.2.3.4.banana -> out.0.2.4.orange -> out.1.2.4.orange -> in.2.4 -> mid.2.4 -> mid.2.4 -> STOP
assert MAIN [T= PROB_TEST_TRACE