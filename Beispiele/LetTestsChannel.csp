channel out:{0..99}

-- is accepted and works with FDR:
TEST_LET_IN_CHANNEL = out!(let f(x)=x*x within f(5)) -> SKIP

channel comm: {0..99}.{0..99}

-- with % 100 no longer causes problem to FDR and crashes ProBE:
TEST(y) = comm?x!(let f(z) = (z*x*y) % 100 within f(x*x)) -> SKIP

TEST1 = TEST(2) [| {|comm|} |] comm!3?z -> out !z -> SKIP

-- with % 100 causes problem to FDR and crashes ProBE:
TEST2(y) = comm?x!(let f(z) = (z*x*y) % 100 within f(4)) -> SKIP

TEST3 = TEST2(2) [| {|comm|} |] comm!3?z -> out !z -> SKIP

-- MAIN crashes ProBE:
MAIN = TEST_LET_IN_CHANNEL ; TEST1 ; TEST3 ; TEST5


TEST4(y) = comm?x!(let g = (x*y) % 100 within g) -> SKIP
TEST5 = TEST4(2) [| {|comm|} |] comm!3?z -> out !z -> STOP

-- Trace Check Generated by ProB:
PROB_TEST_TRACE = out.25 -> comm.3.54 -> out.54 -> comm.3.24 -> out.24 -> comm.3.6 -> out.6 -> STOP

assert MAIN [T= PROB_TEST_TRACE