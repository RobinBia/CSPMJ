{-datatype X = Y.{3..}|O.X.{2..4}
channel c,d: X.{1..3}
G = c.Y.9.3
I = Q
Q(x) = 5+I(x)
ChData = {0,1,2,3}
channel in: ChData 
AS2(x) = in?v@@w!v -> 5+v(x)*w ->STOP
AS3(x) = in$v:{1,2,3}!v
P = <1,2,3|x<-{1,2}>
W(z) = <y|y<-{1,2}>^<z|x<-{5}>-}
--W = <1|y<-{1,2},y==3>

--datatype square = E | Y | G
--subtype colour = E | G

--interface(p) = {| move.d.i.p, move.d.p.i, complete.p | d<-DISCS, i<-PEGS |}
{-Proc1 = 3
Proc2(x,Y) = let
	a(w,v) = let
		q = x
		r = w+v+b
		within Proc1
	--	s = w this would be an unbound identifier "w" exception!
   within Proc1--(x,Y,3)
b = 5  -} 
{-channel a
R = let
        Q = STOP
       within a-> Q
Q = a-> a -> SKIP-}

FORK = 1
PHIL = 1
channel left,right
LPHILS(n) =
  let
    L(0) =
      FORK [right<->left] PHIL
    L(n) =
      let
        HALF = LPHILS(n-1)
      within HALF [right<->left] HALF
  within normal(L(n) [[ ]])

