-- Simple Alphabetized Parallel Example

channel a,b,c,d,e,f

MAIN = e -> Test1 [] f -> Test3 ; e -> Test1

Test1 = (a -> b -> b -> STOP) [ {a,b} || {b,c} ] (b -> c -> b -> STOP)
-- should behave like  a-> b-> c-> b-> STOP

Test2 = (a -> d -> b -> b -> STOP) [ {a,b} || {b,c} ] (b -> c -> b -> STOP) 
{- should not allow d, i.e., behave like  a->STOP -}


channel gen,stop:{0..99}

Test3 = GEN(0) [ {| gen,stop.4 |} || { gen.2,gen.3,gen.4,stop.2,stop.4} ] GEN(2)


GEN(x) = (x<99 & gen!x -> GEN(x+1)) [] stop!x -> SKIP

G2 = GEN(2)

Test4 = (G2 ||| G2) ; G2

-- Trace Check Generated by ProB:
PROB_TEST_TRACE = f -> gen.0 -> gen.1 -> gen.2 -> gen.3 -> stop.4 -> e -> a -> b -> c -> b -> STOP

assert MAIN [T= PROB_TEST_TRACE

