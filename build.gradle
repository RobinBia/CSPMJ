/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ivo' at '6/23/16 1:18 PM' with Gradle 2.10
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

configurations {
    sablecc
}

dependencies {
    sablecc(group: 'de.hhu.stups', name: 'sablecc', version: '3.2.10')
    compile 'com.google.code.findbugs:jsr305:1.3.9'
    testCompile 'junit:junit:4.8.2'
 }

sourceSets {
    main {
        java {
          srcDirs = ['build/temp','src/main/java']
        }
        resources {
          srcDirs = ['src/main/resources']
        }
    }
}

/*
task cleanEclipseJdt {
    file(".settings/org.eclipse.jdt.ui.prefs").delete()
}

task eclipseJdt {
    inputFile = file("scripts/org.eclipse.jdt.core.prefs")
    copy {  from 'scripts'
        into '.settings'
        include 'org.eclipse.jdt.ui.prefs'
    }
}
*/

task genLtlParser(type:JavaExec) {
    doFirst{ file('build/temp').mkdirs() }
    inputs.dir new File('src/main/resources/grammars')
    outputs.dir new File('build/temp')
    main = 'org.sablecc.sablecc.SableCC'
    classpath = configurations.sablecc
    maxHeapSize = '1024m'
    args = ['-d','build/temp','src/main/resources/LtlParser.scc']
}

task genCtlParser(type:JavaExec) {
    doFirst{ file('build/temp').mkdirs() }
    inputs.dir new File('src/main/resources/grammars')
    outputs.dir new File('build/temp')
    main = 'org.sablecc.sablecc.SableCC'
    classpath = configurations.sablecc
    maxHeapSize = '1024m'
    args = ['-d','build/temp','src/main/resources/CtlParser.scc']
}

task genCSPMparser(type:JavaExec) {
    doFirst{ file('build/temp').mkdirs() }
    inputs.dir new File('src/main/resources/grammars')
    outputs.dir new File('build/temp')
    main = 'org.sablecc.sablecc.SableCC'
    classpath = configurations.sablecc
    maxHeapSize = '1024m'
    args = ['-d','build/temp','src/main/resources/CSPMparser.scc']
}

task uberjar(type: Jar, dependsOn: compileJava) {
    baseName = 'cspmj'
    from 'bin'
    include '**/*.class'
    include '**.*.class'
    exclude '**.*.scc' 
    from 'build/temp'
    include '**/*.dat'
    from sourceSets.main.toString()
    include '**/*.java'
    manifest { attributes 'Main-Class': 'CSPMparser' }
}

compileJava {
 dependsOn = ['genLtlParser','genCtlParser','genCSPMparser'] 
}
